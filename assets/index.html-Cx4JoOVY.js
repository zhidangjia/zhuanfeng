import{_ as r,c as n,a as s,o}from"./app-BcNpsEuH.js";const e="/img/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E9%82%A3%E4%BA%9B%E4%BA%8B.webp",a={};function g(i,t){return o(),n("div",null,t[0]||(t[0]=[s('<div style="text-align:center;"><img src="'+e+'" alt="AI时代的本领恐慌" width="512"></div><hr><p><strong>前言：又到筹划新的一年开工各种项目的时候了</strong></p><p>今天，笔者结合自身经历，来聊聊那些让项目“高开低走”的翻车瞬间，以及如何避免被坑进 ICU。</p><hr><h2 id="_1-目标太美-现实太惨-天花板想上-地板还没铺" tabindex="-1"><a class="header-anchor" href="#_1-目标太美-现实太惨-天花板想上-地板还没铺"><span><strong>1. 目标太美，现实太惨：天花板想上，地板还没铺</strong></span></a></h2><p><strong>翻车现场：</strong><br> 部分项目启动时，甲方想一鸣惊人，定个 <strong>“超这赶那”</strong> 的目标，要求一年内做出国内领先的融合版。现实是，团队代码都还在用Struts + Hibernate。</p><p><strong>解决方案：</strong><br> 目标要符合 <strong>“SMART”</strong> 原则：<br> ✅ <strong>S（Specific）具体</strong>——别说“提高用户体验”，改成“减少50%崩溃率”<br> ✅ <strong>M（Measurable）可衡量</strong>——别说“优化响应速度”，改成“查询时间≤200ms”<br> ✅ <strong>A（Achievable）可实现</strong>——别想造火箭，先看看有没汽油<br> ✅ <strong>R（Relevant）相关性</strong>——别强行加 AI，用户只是想个好用的表单<br> ✅ <strong>T（Time-bound）时限性</strong>——项目总不能“遥遥无期”</p><hr><h2 id="_2-计划牛皮吹满天-执行力却没半点" tabindex="-1"><a class="header-anchor" href="#_2-计划牛皮吹满天-执行力却没半点"><span><strong>2. 计划牛皮吹满天，执行力却没半点</strong></span></a></h2><p><strong>翻车现场：</strong><br> 项目计划精细到半天，但到了执行阶段，团队就像<strong>大学生做 PPT</strong>，开工前两周全员“思考人生”，截止日前一周“996熬夜冲”，结果勉强不鸽节点，但代码质量堪比“拼夕夕特价货”。</p><p><strong>解决方案：</strong></p><ul><li><strong>别一拍脑袋就出甘特图</strong>，合理拆解任务，执行周期不要比外卖配送时间还短。</li><li><strong>留点缓冲时间</strong>，别让团队天天“倒计时爆肝”。</li><li><strong>敏捷开发不是“敏捷改需求”</strong>，明确 MVP，先小步快跑。</li></ul><hr><h2 id="_3-预算穷得响叮当-还想造火箭" tabindex="-1"><a class="header-anchor" href="#_3-预算穷得响叮当-还想造火箭"><span><strong>3. 预算穷得响叮当，还想造火箭？</strong></span></a></h2><p><strong>翻车现场：</strong><br> 客户的预算只能买五菱宏光，但需求文档写得跟F1赛车一样。更绝的是，甲方还天天催：“你们能不能再优化优化？我们预算真的很紧！”</p><p><strong>解决方案：</strong></p><ul><li><strong>有多少钱，办多少事</strong>，不要被“低价中标”坑惨了。</li><li><strong>提前对客户进行预期管理</strong>，别等交付了才告诉他们“加钱才能加特效”。</li><li><strong>不要靠“人海战术”填坑</strong>，工具、框架、自动化测试，该上的都得上。</li></ul><hr><h2 id="_4-需求像龙卷风-说变就变" tabindex="-1"><a class="header-anchor" href="#_4-需求像龙卷风-说变就变"><span><strong>4. 需求像龙卷风，说变就变</strong></span></a></h2><p><strong>翻车现场：</strong><br> 第一周做 A，第二周改 B，第三周回到 A，第四周：“还是 B 吧！”……乙方团队已经学会了“摸鱼哲学”：等需求稳定后再开始写代码。</p><p><strong>解决方案：</strong></p><ul><li>需求变更要有 <strong>“变更评估机制”</strong>，不是老板一句话，团队就要推翻重做。</li><li>甲方的<strong>项目经理要有决策力</strong>，别让“开会文学”拖垮项目。</li><li>把需求<strong>锁定周期</strong>，比如“每个月只能变更两次”。</li></ul><hr><h2 id="_5-甲方乙方-各自为王" tabindex="-1"><a class="header-anchor" href="#_5-甲方乙方-各自为王"><span><strong>5. 甲方乙方，各自为王</strong></span></a></h2><p><strong>翻车现场：</strong><br> 乙方想活下去，甲方想压预算。甲方天天变需求，乙方天天打太极。交付前一天，大家才发现：这玩意儿不能用。</p><p><strong>解决方案：</strong></p><ul><li><strong>定期对齐目标</strong>，避免鸡同鸭讲。</li><li><strong>沟通不只是开会</strong>，少整 PPT，多看 Demo。</li><li><strong>甲方也要有懂行的人</strong>，别让行政部门的王姐来评估 AI 项目。</li></ul><hr><h2 id="_6-团队像散装乐队-指哪儿吹哪儿" tabindex="-1"><a class="header-anchor" href="#_6-团队像散装乐队-指哪儿吹哪儿"><span><strong>6. 团队像散装乐队，指哪儿吹哪儿</strong></span></a></h2><p><strong>翻车现场：</strong><br> 项目经理像个带娃的家长，每天都在问：“<strong>昨天的任务完成了吗？</strong>”开发说：“还差一点点。”测试说：“Bug 有亿点点。”运维说：“服务器炸了，已经冒烟了。”</p><p><strong>解决方案：</strong></p><ul><li><strong>别让团队像无头苍蝇</strong>，OKR + 任务拆解，一个萝卜一个坑。</li><li><strong>尽量减少人员流动</strong>，别一个月换三波开发，交接比开发还费时间。</li><li><strong>定期 Code Review</strong>，别等交付了才发现代码质量和祖传 Excel 一样。</li></ul><hr><h2 id="_7-奖罚不清-干好干坏一个样" tabindex="-1"><a class="header-anchor" href="#_7-奖罚不清-干好干坏一个样"><span><strong>7. 奖罚不清，干好干坏一个样</strong></span></a></h2><p><strong>翻车现场：</strong><br> 项目上线了，开发加班加秃了，HR 说：“奖励200元京东卡。” 另一边，需求天天改的老板年底发了个 20 万年终奖……</p><p><strong>解决方案：</strong></p><ul><li><strong>多关注过程，而不是只看结果</strong>，别等交付了才来“秋后算账”。</li><li><strong>奖励要有诚意</strong>，别用“摸鱼 KPI”奖励奋斗者。</li><li><strong>惩罚也要明确</strong>，别让屎山代码的作者年年绩效良好。</li></ul><hr><h2 id="_8-不做风险管理-天天-亡羊补牢" tabindex="-1"><a class="header-anchor" href="#_8-不做风险管理-天天-亡羊补牢"><span><strong>8. 不做风险管理，天天“亡羊补牢”</strong></span></a></h2><p><strong>翻车现场：</strong></p><ul><li>开发到一半，核心技术负责人跑路了</li><li>云环境宕机，发现备份居然是五年前的</li><li>交付前一天，产品经理发现 API 设计和业务逻辑完全对不上</li></ul><p><strong>解决方案：</strong></p><ul><li><strong>所有关键岗位都要有 Plan B</strong>，别把项目押在一个大佬身上。</li><li><strong>提前演练应急方案</strong>，服务器宕机不应该靠许愿解决。</li><li><strong>测试不是走个流程</strong>，别交付前才发现用户用不了。</li></ul><hr><h2 id="_9-甲方或乙方或两方-pm-经验不足-全员盲人摸象" tabindex="-1"><a class="header-anchor" href="#_9-甲方或乙方或两方-pm-经验不足-全员盲人摸象"><span><strong>9. 甲方或乙方或两方 PM 经验不足，全员盲人摸象</strong></span></a></h2><p><strong>翻车现场：</strong><br> 甲方 PM：我们要做 AI 赋能的数字孪生。<br> 乙方 PM：好的，懂了，马上开始做小程序。<br> 最终交付：Excel 自动填充表。</p><p><strong>解决方案：</strong></p><ul><li><strong>甲方 PM 要懂技术</strong>，不是所有问题都能靠“加 AI”解决。</li><li><strong>乙方 PM 要懂业务</strong>，别客户说啥就做啥，要引导需求。</li><li><strong>数据驱动决策</strong>，少一点 PPT，实打实的分析。</li></ul><hr><h3 id="尾声" tabindex="-1"><a class="header-anchor" href="#尾声"><span><strong>尾声：</strong></span></a></h3><p>软件交付这件事，就像是一场马拉松，不是比谁跑得快，而是比谁不掉队。<br> 希望今天的吐槽，能让大家在项目管理的坑里，少踩几个。</p>',52)]))}const p=r(a,[["render",g]]),h=JSON.parse('{"path":"/article/typical-issues-in-software-project-management/","title":"政企行业软件项目交付中的那些典型问题","lang":"zh-CN","frontmatter":{"title":"政企行业软件项目交付中的那些典型问题","createTime":"2023/02/09 10:30:44","permalink":"/article/typical-issues-in-software-project-management/","excerpt":"那些年干项目，踩过的坑","outline":[2,3],"cover":"/img/项目管理那些事.webp","tags":["技术专栏","项目管理"],"description":"AI时代的本领恐慌 前言：又到筹划新的一年开工各种项目的时候了 今天，笔者结合自身经历，来聊聊那些让项目“高开低走”的翻车瞬间，以及如何避免被坑进 ICU。 1. 目标太美，现实太惨：天花板想上，地板还没铺 翻车现场： 部分项目启动时，甲方想一鸣惊人，定个 “超这赶那” 的目标，要求一年内做出国内领先的融合版。现实是，团队代码都还在用Struts + ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"政企行业软件项目交付中的那些典型问题\\",\\"image\\":[\\"https://zhuanfeng.netlify.app/img/项目管理那些事.webp\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://zhuanfeng.netlify.app/article/typical-issues-in-software-project-management/"}],["meta",{"property":"og:site_name","content":"朱岸峰的个人网站"}],["meta",{"property":"og:title","content":"政企行业软件项目交付中的那些典型问题"}],["meta",{"property":"og:description","content":"AI时代的本领恐慌 前言：又到筹划新的一年开工各种项目的时候了 今天，笔者结合自身经历，来聊聊那些让项目“高开低走”的翻车瞬间，以及如何避免被坑进 ICU。 1. 目标太美，现实太惨：天花板想上，地板还没铺 翻车现场： 部分项目启动时，甲方想一鸣惊人，定个 “超这赶那” 的目标，要求一年内做出国内领先的融合版。现实是，团队代码都还在用Struts + ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://zhuanfeng.netlify.app/img/项目管理那些事.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://zhuanfeng.netlify.app/img/项目管理那些事.webp"}],["meta",{"name":"twitter:image:alt","content":"政企行业软件项目交付中的那些典型问题"}],["meta",{"property":"article:tag","content":"项目管理"}],["meta",{"property":"article:tag","content":"技术专栏"}]]},"readingTime":{"minutes":4.84,"words":1452},"git":{},"autoDesc":true,"filePathRelative":"技术专栏/政企行业软件项目交付中的那些典型问题.md","headers":[],"categoryList":[{"id":"9742da","sort":10002,"name":"技术专栏"}]}');export{p as comp,h as data};
